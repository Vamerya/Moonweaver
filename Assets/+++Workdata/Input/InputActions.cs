//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/+++Workdata/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""PlayerKeyboardMouseActionMap"",
            ""id"": ""3b22308c-1ae7-4663-9691-23aa1a9cabbc"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""27fa00c0-9146-4a8c-837e-89e4a8796062"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""f6070509-73e0-4816-89c3-aecdc9e99f65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ultimate"",
                    ""type"": ""Button"",
                    ""id"": ""682bf956-d287-4d70-a51f-7225552ced05"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""869709af-5c52-474b-b3f3-b6a19a014154"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""6cf07c57-eb05-444e-87a7-193c0abadb4e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""613147af-5da8-4095-b432-fa1ca46d413a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""041a2f66-08f8-4f78-bb3e-0a9e6106116c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseFlask"",
                    ""type"": ""Button"",
                    ""id"": ""8e0b1669-dd9e-4f6e-9352-3c7837b2b122"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TogglePauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""f00dd86a-df2d-49d1-a092-87ec0b8a0355"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""12960ef3-f7c0-4b8b-90a0-10761aa76fa8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""60ab1a31-5445-4553-b6c3-8fa33f5f2760"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2651d5b6-9929-446e-86ff-7929b0af232b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ade3992e-0700-41f7-9dc2-8ca7cf10451d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""14ec918e-d250-45b1-adb7-07a67e0d206b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""58461251-3bec-4ab8-8c69-636607535487"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e17238ef-d34e-4ae9-b286-93d4f8bd155c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24d94156-be21-4cf7-a630-a8565c53d0dd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4585046-a135-411f-b626-01f25db844cc"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""004a4e92-4832-4f95-89cc-00b9144c9ac0"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f337afef-9b9b-41ad-a677-0c00da3699c0"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c4f0fed-3f10-4ba8-8699-8ef2aa895eaf"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ultimate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8467dc6a-1ef2-4afe-b618-4ae62c75bf7f"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseFlask"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68de7e1d-e088-42c5-b82f-dc9cf58ecd13"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TogglePauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bbcaa66e-1a82-4f7c-a863-74ffe65937cf"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerXBOXActionMap"",
            ""id"": ""5831195e-10a6-4774-8c6e-72c0629a1947"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""278c7717-edb4-4a12-a7a6-231f082a15f9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""48508fcc-f954-483a-993f-b6265cae38cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ultimate"",
                    ""type"": ""Button"",
                    ""id"": ""a1063420-f10d-42b0-b5e2-7504586ab7bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""97bb2498-77c9-4798-9da3-ecc00bed1fae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""00707ded-db4c-42cb-8fba-64e205278442"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""691d4cc3-b084-499c-9822-0b14e2656229"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""c4669f3d-f35f-4542-bda8-dd43362305c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseFlask"",
                    ""type"": ""Button"",
                    ""id"": ""fd63564f-cdb1-43f9-9256-e573d2cc669c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TogglePauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""06603cb7-7785-4ae5-ba69-71f03551f6e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""d6dddc3f-51c2-4920-9494-8de8d3c12f84"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""fbb60921-a5fa-4e68-a715-d73390a18e11"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c14bd7b0-1294-4bde-9328-40cb3bd175bc"",
                    ""path"": ""<XInputController>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""545f9faa-bf17-4c6d-9b81-1c988cca5e5d"",
                    ""path"": ""<XInputController>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4cd1d847-208f-4e43-908f-a358c89ebe4a"",
                    ""path"": ""<XInputController>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3d009586-3a6a-4c93-864f-7a72aa1531cd"",
                    ""path"": ""<XInputController>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3f69355f-975b-478e-8466-875b8172f041"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e25f47b8-b7f5-422a-bea0-c8ed68116503"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a7f99dd-643b-4028-aefe-d8aa9c7b851e"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""912fccdb-f147-48e8-a52c-fb520e275bfd"",
                    ""path"": ""<XInputController>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67569f4e-d5fc-4ee6-b61a-899e108d5fb3"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2616fee0-ba88-4155-812b-4f2e787dbc75"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseFlask"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6445aab6-c264-4df0-bd53-97fe59d9cc97"",
                    ""path"": ""<XInputController>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TogglePauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd41180c-bb37-4c8e-9bc7-a3a54c6bbcf9"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ultimate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fc4b99c-c5f9-456c-9f33-ae50bb4d2089"",
                    ""path"": ""<XInputController>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerPS4ActionMap"",
            ""id"": ""453568c2-3de0-46c7-8baa-b7d05f0dcf41"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""cc4c3aa2-2b09-4c34-816d-a477687bb69b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""b68c173f-c190-427b-abbe-6eb5265af8cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ultimate"",
                    ""type"": ""Button"",
                    ""id"": ""d7e81297-ebb8-4c15-8cc6-110f659923c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""75271763-6c6b-42ab-8f6a-a41bf106fdd7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""b5b57b20-f7e1-4191-af83-46b69e901a72"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapWeapon"",
                    ""type"": ""Button"",
                    ""id"": ""5d271493-244e-4713-9c94-3caa34170690"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInventory"",
                    ""type"": ""Button"",
                    ""id"": ""83e732eb-3fb2-43f0-ad7c-284a610d20de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseFlask"",
                    ""type"": ""Button"",
                    ""id"": ""68483318-3967-4eda-a537-91555eeb315e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TogglePauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""2dff2165-7107-4773-8a58-a53caf9d708d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""569749c9-4e3a-4e05-b7ec-2f4f06f08b2d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""03d4914d-6533-4da7-89b1-73ea0c9f39f7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""46ee8a44-b8a9-4641-b353-477ef5c29fb7"",
                    ""path"": ""<DualShockGamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""35a5efc0-1933-49aa-9205-f0cbba5fe5c8"",
                    ""path"": ""<DualShockGamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0b3f536b-b195-4502-9f3f-8a0a8f6092c5"",
                    ""path"": ""<DualShockGamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""32a3d7fc-159d-45fc-a077-8b2685057c9c"",
                    ""path"": ""<DualShockGamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4c4bac61-da69-45eb-bf3d-c1fddc8d60bd"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11c73b0f-7bbb-4678-a8a0-9e74fa2e2bc4"",
                    ""path"": ""<DualShockGamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ultimate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0245162-a624-4887-bf45-0c935b4c0712"",
                    ""path"": ""<DualShockGamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c677077c-7879-4214-9499-bd99f09e726d"",
                    ""path"": ""<DualShockGamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81f7b3d8-306e-4215-924d-8081d5d9a63b"",
                    ""path"": ""<DualShockGamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapWeapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec763351-1a8b-4555-af1a-50eb25715590"",
                    ""path"": ""<DualShockGamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""208577f1-5b64-489b-8352-49aef06578f5"",
                    ""path"": ""<DualShockGamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseFlask"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90b82959-d978-40f2-9a14-16eaf6b2e5d7"",
                    ""path"": ""<DualShockGamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TogglePauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6d1d1e4-595e-4b7e-8cc9-ee0b9883aa40"",
                    ""path"": ""<DualShockGamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerKeyboardMouseActionMap
        m_PlayerKeyboardMouseActionMap = asset.FindActionMap("PlayerKeyboardMouseActionMap", throwIfNotFound: true);
        m_PlayerKeyboardMouseActionMap_Movement = m_PlayerKeyboardMouseActionMap.FindAction("Movement", throwIfNotFound: true);
        m_PlayerKeyboardMouseActionMap_Interact = m_PlayerKeyboardMouseActionMap.FindAction("Interact", throwIfNotFound: true);
        m_PlayerKeyboardMouseActionMap_Ultimate = m_PlayerKeyboardMouseActionMap.FindAction("Ultimate", throwIfNotFound: true);
        m_PlayerKeyboardMouseActionMap_Attack = m_PlayerKeyboardMouseActionMap.FindAction("Attack", throwIfNotFound: true);
        m_PlayerKeyboardMouseActionMap_Dash = m_PlayerKeyboardMouseActionMap.FindAction("Dash", throwIfNotFound: true);
        m_PlayerKeyboardMouseActionMap_SwapWeapon = m_PlayerKeyboardMouseActionMap.FindAction("SwapWeapon", throwIfNotFound: true);
        m_PlayerKeyboardMouseActionMap_OpenInventory = m_PlayerKeyboardMouseActionMap.FindAction("OpenInventory", throwIfNotFound: true);
        m_PlayerKeyboardMouseActionMap_UseFlask = m_PlayerKeyboardMouseActionMap.FindAction("UseFlask", throwIfNotFound: true);
        m_PlayerKeyboardMouseActionMap_TogglePauseMenu = m_PlayerKeyboardMouseActionMap.FindAction("TogglePauseMenu", throwIfNotFound: true);
        m_PlayerKeyboardMouseActionMap_Look = m_PlayerKeyboardMouseActionMap.FindAction("Look", throwIfNotFound: true);
        // PlayerXBOXActionMap
        m_PlayerXBOXActionMap = asset.FindActionMap("PlayerXBOXActionMap", throwIfNotFound: true);
        m_PlayerXBOXActionMap_Movement = m_PlayerXBOXActionMap.FindAction("Movement", throwIfNotFound: true);
        m_PlayerXBOXActionMap_Interact = m_PlayerXBOXActionMap.FindAction("Interact", throwIfNotFound: true);
        m_PlayerXBOXActionMap_Ultimate = m_PlayerXBOXActionMap.FindAction("Ultimate", throwIfNotFound: true);
        m_PlayerXBOXActionMap_Attack = m_PlayerXBOXActionMap.FindAction("Attack", throwIfNotFound: true);
        m_PlayerXBOXActionMap_Dash = m_PlayerXBOXActionMap.FindAction("Dash", throwIfNotFound: true);
        m_PlayerXBOXActionMap_SwapWeapon = m_PlayerXBOXActionMap.FindAction("SwapWeapon", throwIfNotFound: true);
        m_PlayerXBOXActionMap_OpenInventory = m_PlayerXBOXActionMap.FindAction("OpenInventory", throwIfNotFound: true);
        m_PlayerXBOXActionMap_UseFlask = m_PlayerXBOXActionMap.FindAction("UseFlask", throwIfNotFound: true);
        m_PlayerXBOXActionMap_TogglePauseMenu = m_PlayerXBOXActionMap.FindAction("TogglePauseMenu", throwIfNotFound: true);
        m_PlayerXBOXActionMap_Look = m_PlayerXBOXActionMap.FindAction("Look", throwIfNotFound: true);
        // PlayerPS4ActionMap
        m_PlayerPS4ActionMap = asset.FindActionMap("PlayerPS4ActionMap", throwIfNotFound: true);
        m_PlayerPS4ActionMap_Movement = m_PlayerPS4ActionMap.FindAction("Movement", throwIfNotFound: true);
        m_PlayerPS4ActionMap_Interact = m_PlayerPS4ActionMap.FindAction("Interact", throwIfNotFound: true);
        m_PlayerPS4ActionMap_Ultimate = m_PlayerPS4ActionMap.FindAction("Ultimate", throwIfNotFound: true);
        m_PlayerPS4ActionMap_Attack = m_PlayerPS4ActionMap.FindAction("Attack", throwIfNotFound: true);
        m_PlayerPS4ActionMap_Dash = m_PlayerPS4ActionMap.FindAction("Dash", throwIfNotFound: true);
        m_PlayerPS4ActionMap_SwapWeapon = m_PlayerPS4ActionMap.FindAction("SwapWeapon", throwIfNotFound: true);
        m_PlayerPS4ActionMap_OpenInventory = m_PlayerPS4ActionMap.FindAction("OpenInventory", throwIfNotFound: true);
        m_PlayerPS4ActionMap_UseFlask = m_PlayerPS4ActionMap.FindAction("UseFlask", throwIfNotFound: true);
        m_PlayerPS4ActionMap_TogglePauseMenu = m_PlayerPS4ActionMap.FindAction("TogglePauseMenu", throwIfNotFound: true);
        m_PlayerPS4ActionMap_Look = m_PlayerPS4ActionMap.FindAction("Look", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerKeyboardMouseActionMap
    private readonly InputActionMap m_PlayerKeyboardMouseActionMap;
    private IPlayerKeyboardMouseActionMapActions m_PlayerKeyboardMouseActionMapActionsCallbackInterface;
    private readonly InputAction m_PlayerKeyboardMouseActionMap_Movement;
    private readonly InputAction m_PlayerKeyboardMouseActionMap_Interact;
    private readonly InputAction m_PlayerKeyboardMouseActionMap_Ultimate;
    private readonly InputAction m_PlayerKeyboardMouseActionMap_Attack;
    private readonly InputAction m_PlayerKeyboardMouseActionMap_Dash;
    private readonly InputAction m_PlayerKeyboardMouseActionMap_SwapWeapon;
    private readonly InputAction m_PlayerKeyboardMouseActionMap_OpenInventory;
    private readonly InputAction m_PlayerKeyboardMouseActionMap_UseFlask;
    private readonly InputAction m_PlayerKeyboardMouseActionMap_TogglePauseMenu;
    private readonly InputAction m_PlayerKeyboardMouseActionMap_Look;
    public struct PlayerKeyboardMouseActionMapActions
    {
        private @InputActions m_Wrapper;
        public PlayerKeyboardMouseActionMapActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerKeyboardMouseActionMap_Movement;
        public InputAction @Interact => m_Wrapper.m_PlayerKeyboardMouseActionMap_Interact;
        public InputAction @Ultimate => m_Wrapper.m_PlayerKeyboardMouseActionMap_Ultimate;
        public InputAction @Attack => m_Wrapper.m_PlayerKeyboardMouseActionMap_Attack;
        public InputAction @Dash => m_Wrapper.m_PlayerKeyboardMouseActionMap_Dash;
        public InputAction @SwapWeapon => m_Wrapper.m_PlayerKeyboardMouseActionMap_SwapWeapon;
        public InputAction @OpenInventory => m_Wrapper.m_PlayerKeyboardMouseActionMap_OpenInventory;
        public InputAction @UseFlask => m_Wrapper.m_PlayerKeyboardMouseActionMap_UseFlask;
        public InputAction @TogglePauseMenu => m_Wrapper.m_PlayerKeyboardMouseActionMap_TogglePauseMenu;
        public InputAction @Look => m_Wrapper.m_PlayerKeyboardMouseActionMap_Look;
        public InputActionMap Get() { return m_Wrapper.m_PlayerKeyboardMouseActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerKeyboardMouseActionMapActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerKeyboardMouseActionMapActions instance)
        {
            if (m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnMovement;
                @Interact.started -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnInteract;
                @Ultimate.started -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnUltimate;
                @Ultimate.performed -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnUltimate;
                @Ultimate.canceled -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnUltimate;
                @Attack.started -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnAttack;
                @Dash.started -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnDash;
                @SwapWeapon.started -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnSwapWeapon;
                @SwapWeapon.performed -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnSwapWeapon;
                @SwapWeapon.canceled -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnSwapWeapon;
                @OpenInventory.started -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.performed -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.canceled -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnOpenInventory;
                @UseFlask.started -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnUseFlask;
                @UseFlask.performed -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnUseFlask;
                @UseFlask.canceled -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnUseFlask;
                @TogglePauseMenu.started -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnTogglePauseMenu;
                @TogglePauseMenu.performed -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnTogglePauseMenu;
                @TogglePauseMenu.canceled -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnTogglePauseMenu;
                @Look.started -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface.OnLook;
            }
            m_Wrapper.m_PlayerKeyboardMouseActionMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Ultimate.started += instance.OnUltimate;
                @Ultimate.performed += instance.OnUltimate;
                @Ultimate.canceled += instance.OnUltimate;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @SwapWeapon.started += instance.OnSwapWeapon;
                @SwapWeapon.performed += instance.OnSwapWeapon;
                @SwapWeapon.canceled += instance.OnSwapWeapon;
                @OpenInventory.started += instance.OnOpenInventory;
                @OpenInventory.performed += instance.OnOpenInventory;
                @OpenInventory.canceled += instance.OnOpenInventory;
                @UseFlask.started += instance.OnUseFlask;
                @UseFlask.performed += instance.OnUseFlask;
                @UseFlask.canceled += instance.OnUseFlask;
                @TogglePauseMenu.started += instance.OnTogglePauseMenu;
                @TogglePauseMenu.performed += instance.OnTogglePauseMenu;
                @TogglePauseMenu.canceled += instance.OnTogglePauseMenu;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
            }
        }
    }
    public PlayerKeyboardMouseActionMapActions @PlayerKeyboardMouseActionMap => new PlayerKeyboardMouseActionMapActions(this);

    // PlayerXBOXActionMap
    private readonly InputActionMap m_PlayerXBOXActionMap;
    private IPlayerXBOXActionMapActions m_PlayerXBOXActionMapActionsCallbackInterface;
    private readonly InputAction m_PlayerXBOXActionMap_Movement;
    private readonly InputAction m_PlayerXBOXActionMap_Interact;
    private readonly InputAction m_PlayerXBOXActionMap_Ultimate;
    private readonly InputAction m_PlayerXBOXActionMap_Attack;
    private readonly InputAction m_PlayerXBOXActionMap_Dash;
    private readonly InputAction m_PlayerXBOXActionMap_SwapWeapon;
    private readonly InputAction m_PlayerXBOXActionMap_OpenInventory;
    private readonly InputAction m_PlayerXBOXActionMap_UseFlask;
    private readonly InputAction m_PlayerXBOXActionMap_TogglePauseMenu;
    private readonly InputAction m_PlayerXBOXActionMap_Look;
    public struct PlayerXBOXActionMapActions
    {
        private @InputActions m_Wrapper;
        public PlayerXBOXActionMapActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerXBOXActionMap_Movement;
        public InputAction @Interact => m_Wrapper.m_PlayerXBOXActionMap_Interact;
        public InputAction @Ultimate => m_Wrapper.m_PlayerXBOXActionMap_Ultimate;
        public InputAction @Attack => m_Wrapper.m_PlayerXBOXActionMap_Attack;
        public InputAction @Dash => m_Wrapper.m_PlayerXBOXActionMap_Dash;
        public InputAction @SwapWeapon => m_Wrapper.m_PlayerXBOXActionMap_SwapWeapon;
        public InputAction @OpenInventory => m_Wrapper.m_PlayerXBOXActionMap_OpenInventory;
        public InputAction @UseFlask => m_Wrapper.m_PlayerXBOXActionMap_UseFlask;
        public InputAction @TogglePauseMenu => m_Wrapper.m_PlayerXBOXActionMap_TogglePauseMenu;
        public InputAction @Look => m_Wrapper.m_PlayerXBOXActionMap_Look;
        public InputActionMap Get() { return m_Wrapper.m_PlayerXBOXActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerXBOXActionMapActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerXBOXActionMapActions instance)
        {
            if (m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnMovement;
                @Interact.started -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnInteract;
                @Ultimate.started -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnUltimate;
                @Ultimate.performed -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnUltimate;
                @Ultimate.canceled -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnUltimate;
                @Attack.started -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnAttack;
                @Dash.started -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnDash;
                @SwapWeapon.started -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnSwapWeapon;
                @SwapWeapon.performed -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnSwapWeapon;
                @SwapWeapon.canceled -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnSwapWeapon;
                @OpenInventory.started -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.performed -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.canceled -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnOpenInventory;
                @UseFlask.started -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnUseFlask;
                @UseFlask.performed -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnUseFlask;
                @UseFlask.canceled -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnUseFlask;
                @TogglePauseMenu.started -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnTogglePauseMenu;
                @TogglePauseMenu.performed -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnTogglePauseMenu;
                @TogglePauseMenu.canceled -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnTogglePauseMenu;
                @Look.started -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface.OnLook;
            }
            m_Wrapper.m_PlayerXBOXActionMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Ultimate.started += instance.OnUltimate;
                @Ultimate.performed += instance.OnUltimate;
                @Ultimate.canceled += instance.OnUltimate;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @SwapWeapon.started += instance.OnSwapWeapon;
                @SwapWeapon.performed += instance.OnSwapWeapon;
                @SwapWeapon.canceled += instance.OnSwapWeapon;
                @OpenInventory.started += instance.OnOpenInventory;
                @OpenInventory.performed += instance.OnOpenInventory;
                @OpenInventory.canceled += instance.OnOpenInventory;
                @UseFlask.started += instance.OnUseFlask;
                @UseFlask.performed += instance.OnUseFlask;
                @UseFlask.canceled += instance.OnUseFlask;
                @TogglePauseMenu.started += instance.OnTogglePauseMenu;
                @TogglePauseMenu.performed += instance.OnTogglePauseMenu;
                @TogglePauseMenu.canceled += instance.OnTogglePauseMenu;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
            }
        }
    }
    public PlayerXBOXActionMapActions @PlayerXBOXActionMap => new PlayerXBOXActionMapActions(this);

    // PlayerPS4ActionMap
    private readonly InputActionMap m_PlayerPS4ActionMap;
    private IPlayerPS4ActionMapActions m_PlayerPS4ActionMapActionsCallbackInterface;
    private readonly InputAction m_PlayerPS4ActionMap_Movement;
    private readonly InputAction m_PlayerPS4ActionMap_Interact;
    private readonly InputAction m_PlayerPS4ActionMap_Ultimate;
    private readonly InputAction m_PlayerPS4ActionMap_Attack;
    private readonly InputAction m_PlayerPS4ActionMap_Dash;
    private readonly InputAction m_PlayerPS4ActionMap_SwapWeapon;
    private readonly InputAction m_PlayerPS4ActionMap_OpenInventory;
    private readonly InputAction m_PlayerPS4ActionMap_UseFlask;
    private readonly InputAction m_PlayerPS4ActionMap_TogglePauseMenu;
    private readonly InputAction m_PlayerPS4ActionMap_Look;
    public struct PlayerPS4ActionMapActions
    {
        private @InputActions m_Wrapper;
        public PlayerPS4ActionMapActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerPS4ActionMap_Movement;
        public InputAction @Interact => m_Wrapper.m_PlayerPS4ActionMap_Interact;
        public InputAction @Ultimate => m_Wrapper.m_PlayerPS4ActionMap_Ultimate;
        public InputAction @Attack => m_Wrapper.m_PlayerPS4ActionMap_Attack;
        public InputAction @Dash => m_Wrapper.m_PlayerPS4ActionMap_Dash;
        public InputAction @SwapWeapon => m_Wrapper.m_PlayerPS4ActionMap_SwapWeapon;
        public InputAction @OpenInventory => m_Wrapper.m_PlayerPS4ActionMap_OpenInventory;
        public InputAction @UseFlask => m_Wrapper.m_PlayerPS4ActionMap_UseFlask;
        public InputAction @TogglePauseMenu => m_Wrapper.m_PlayerPS4ActionMap_TogglePauseMenu;
        public InputAction @Look => m_Wrapper.m_PlayerPS4ActionMap_Look;
        public InputActionMap Get() { return m_Wrapper.m_PlayerPS4ActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerPS4ActionMapActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerPS4ActionMapActions instance)
        {
            if (m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnMovement;
                @Interact.started -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnInteract;
                @Ultimate.started -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnUltimate;
                @Ultimate.performed -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnUltimate;
                @Ultimate.canceled -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnUltimate;
                @Attack.started -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnAttack;
                @Dash.started -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnDash;
                @SwapWeapon.started -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnSwapWeapon;
                @SwapWeapon.performed -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnSwapWeapon;
                @SwapWeapon.canceled -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnSwapWeapon;
                @OpenInventory.started -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.performed -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.canceled -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnOpenInventory;
                @UseFlask.started -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnUseFlask;
                @UseFlask.performed -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnUseFlask;
                @UseFlask.canceled -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnUseFlask;
                @TogglePauseMenu.started -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnTogglePauseMenu;
                @TogglePauseMenu.performed -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnTogglePauseMenu;
                @TogglePauseMenu.canceled -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnTogglePauseMenu;
                @Look.started -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface.OnLook;
            }
            m_Wrapper.m_PlayerPS4ActionMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Ultimate.started += instance.OnUltimate;
                @Ultimate.performed += instance.OnUltimate;
                @Ultimate.canceled += instance.OnUltimate;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @SwapWeapon.started += instance.OnSwapWeapon;
                @SwapWeapon.performed += instance.OnSwapWeapon;
                @SwapWeapon.canceled += instance.OnSwapWeapon;
                @OpenInventory.started += instance.OnOpenInventory;
                @OpenInventory.performed += instance.OnOpenInventory;
                @OpenInventory.canceled += instance.OnOpenInventory;
                @UseFlask.started += instance.OnUseFlask;
                @UseFlask.performed += instance.OnUseFlask;
                @UseFlask.canceled += instance.OnUseFlask;
                @TogglePauseMenu.started += instance.OnTogglePauseMenu;
                @TogglePauseMenu.performed += instance.OnTogglePauseMenu;
                @TogglePauseMenu.canceled += instance.OnTogglePauseMenu;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
            }
        }
    }
    public PlayerPS4ActionMapActions @PlayerPS4ActionMap => new PlayerPS4ActionMapActions(this);
    public interface IPlayerKeyboardMouseActionMapActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnUltimate(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnSwapWeapon(InputAction.CallbackContext context);
        void OnOpenInventory(InputAction.CallbackContext context);
        void OnUseFlask(InputAction.CallbackContext context);
        void OnTogglePauseMenu(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
    }
    public interface IPlayerXBOXActionMapActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnUltimate(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnSwapWeapon(InputAction.CallbackContext context);
        void OnOpenInventory(InputAction.CallbackContext context);
        void OnUseFlask(InputAction.CallbackContext context);
        void OnTogglePauseMenu(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
    }
    public interface IPlayerPS4ActionMapActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnUltimate(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnSwapWeapon(InputAction.CallbackContext context);
        void OnOpenInventory(InputAction.CallbackContext context);
        void OnUseFlask(InputAction.CallbackContext context);
        void OnTogglePauseMenu(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
    }
}
